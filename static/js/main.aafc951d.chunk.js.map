{"version":3,"sources":["components/ui /landing-page/LandingPage.tsx","components/ui /questions/Result.tsx","components/ui /questions/Questions.tsx","components/mieter/Mieter.tsx","components/owner/Owner.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledCard","styled","Card","theme","transition","transform","LandingPage","choice","setChoice","handleCardClick","Grid","container","direction","justifyContent","alignItems","sx","width","height","item","xs","Typography","color","variant","onClick","event","padding","minWidth","CardActionArea","CardMedia","style","marginLeft","marginRight","component","image","alt","CardContent","gutterBottom","Result","children","text","imagePath","title","square","maxWidth","backgroundColor","my","src","align","px","pb","split","py","Questions","steps","React","activeStep","setActiveStep","contacted","setContacted","handleNext","answer","prevActiveStep","setAnswers","old","ret","handleBack","Array","length","fill","answers","Paper","elevation","p","Box","Stepper","orientation","map","step","index","Step","StepLabel","optional","label","StepContent","description","mb","Button","mt","mr","disabled","Divider","val","showIfNo","returnYes","returnNo","componentYes","componentNo","spacing","TextField","id","size","fullWidth","multiline","Mieter","Owner","App","useState","showLandingPage","setShowLandingPage","useEffect","className","overflow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aafc951d.chunk.js","sourcesContent":["import {\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport BusinessIcon from \"@mui/icons-material/Business\";\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  transition: \"transform 0.15s ease-in-out\",\n  \"&:hover\": { transform: \"scale3d(1.05, 1.05, 1)\" },\n}));\n\ninterface LadingPageProps {\n  choice: string;\n  setChoice: React.Dispatch<React.SetStateAction<string>>,\n}\n\nconst LandingPage = ({choice, setChoice} : LadingPageProps) => {\n\n  const handleCardClick = (choice : string) => {\n    setChoice(choice);\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"flex-end\"\n      alignItems=\"center\"\n      sx={{ width: \"100vw\", height: \"100vh\" }}\n    >\n      <Grid item xs={1}></Grid>\n      <Grid item xs={1}>\n        <Typography color=\"white\" variant=\"h1\">\n          WÃ¤hlen Sie:\n        </Typography>\n      </Grid>\n      <Grid item xs={1}></Grid>\n      <Grid sx={{ width: \"80%\" }} item xs={8}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"space-evenly\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <StyledCard onClick={(event) => handleCardClick('mieter')} sx={{ padding: \"4px\", minWidth:'300px' }}>\n              <CardActionArea>\n                <CardMedia\n                style={{width: '200px', marginLeft: 'auto', marginRight: 'auto'}}\n                  component=\"img\"\n                  image=\"https://cdn-icons-png.flaticon.com/256/2590/2590500.png\"\n                  alt=\"green iguana\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h3\" component=\"div\">\n                    Mieter\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </StyledCard>\n          </Grid>\n          <Grid item>\n            <StyledCard onClick={(event) => handleCardClick('eigentuemer')} sx={{minWidth:'300px', padding: \"4px\" }}>\n              <CardActionArea>\n                <CardMedia\n                  component=\"img\"\n                  style={{width: '200px', marginLeft: 'auto', marginRight: 'auto'}}\n                  image=\"https://cdn-icons-png.flaticon.com/256/2590/2590491.png\"\n                  alt=\"green iguana\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h3\" component=\"div\">\n                   EigentÃ¼mer\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </StyledCard>\n          </Grid>\n          <Grid item>\n            <StyledCard onClick={(event) => handleCardClick('organisation')} sx={{minWidth:'300px' ,padding: \"4px\" }}>\n              <CardActionArea>\n                <CardMedia\n                style={{width: '200px', marginLeft: 'auto', marginRight: 'auto'}}\n                  component=\"img\"\n                  image=\"https://cdn-icons-png.flaticon.com/256/2590/2590477.png\"\n                  alt=\"green iguana\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h3\" component=\"div\">\n                    Organisation\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </StyledCard>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LandingPage;\n","import {\n  Grid,\n  Paper,\n  Typography,\n  Divider,\n  CardMedia,\n  Box,\n  Card,\n} from \"@mui/material\";\nimport { ReactNode } from \"react\";\n\ninterface ResultProps {\n  children?: ReactNode;\n  text: string;\n  imagePath?: string;\n  title: string;\n}\n\nconst Result = ({ children, text, imagePath, title }: ResultProps) => {\n  return (\n    <>\n      <Card square sx={{ maxWidth: '100%', backgroundColor:'#A7D930CA' , my:1.5}}>\n        <CardMedia\n          component=\"img\"\n          height=\"140\"\n          src={imagePath}\n          alt=\"garden image\"\n        />\n        <Typography color='text.primary' align='left'  sx={{px:2, my:1, pb:0}} gutterBottom variant=\"h5\" component=\"div\">\n        {title.split(' ')[3]}\n        </Typography>\n        <Typography color='text.secondary' align='left' sx={{px:2, py:1}} >\n        {text}\n        </Typography>\n      </Card>\n    </>\n  );\n};\n\nexport default Result;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport StepContent from \"@mui/material/StepContent\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { Card, Divider, Grid } from \"@mui/material\";\nimport Result from \"./Result\";\nimport TextField from \"@mui/material/TextField\";\n\ninterface QuestionsProps {\n  steps: {\n    label: string;\n    showIfNo: boolean;\n    description: string;\n    returnYes: string;\n    returnNo: string;\n    componentYes?: React.ReactNode;\n    componentNo?: React.ReactNode;\n    imagePath?: string;\n  }[];\n}\n\nconst Questions = ({ steps }: QuestionsProps) => {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [contacted, setContacted] = React.useState(false);\n\n  const handleNext = (answer: boolean) => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setAnswers((old) => {\n      let ret = [...old];\n      ret[activeStep] = answer;\n      return ret;\n    });\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const [answers, setAnswers] = React.useState(\n    new Array(steps.length).fill(false)\n  );\n\n  return (\n    <Paper elevation={0} sx={{ p: 4 }}>\n      <Box sx={{ minWidth: 600 }}>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((step, index) => (\n            <Step key={step.label}>\n              <StepLabel\n                optional={\n                  index === steps.length - 1 ? (\n                    <Typography variant=\"caption\">Letzte Frage</Typography>\n                  ) : null\n                }\n              >\n                {step.label}\n              </StepLabel>\n              <StepContent>\n                <Typography>{step.description}</Typography>\n                <Box sx={{ mb: 2 }}>\n                  <div>\n                    <Button\n                      color=\"success\"\n                      variant=\"contained\"\n                      onClick={(event) => handleNext(true)}\n                      sx={{ mt: 1, mr: 1 }}\n                    >\n                      Ja\n                    </Button>\n                    <Button\n                      color=\"error\"\n                      variant=\"contained\"\n                      onClick={(event) => handleNext(false)}\n                      sx={{ mt: 1, mr: 1 }}\n                    >\n                      Nein\n                    </Button>\n                    <Button\n                      disabled={index === 0}\n                      onClick={handleBack}\n                      sx={{ mt: 1, mr: 1 }}\n                    >\n                      ZurÃ¼ck\n                    </Button>\n                  </div>\n                </Box>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n        {activeStep === steps.length && (\n          <>\n            <Divider />\n            <Paper square elevation={0} sx={{ p: 3, maxWidth: \"45vw\" }}>\n              <Typography variant=\"h3\">Ergebnisse</Typography>\n              {answers.map((val, index) => {\n                if (!steps[index].showIfNo) {\n                  return <></>;\n                }\n                return (\n                  <Result\n                    text={val ? steps[index].returnYes : steps[index].returnNo}\n                    imagePath={steps[index].imagePath}\n                    title={steps[index].label}\n                  >\n                    {val && steps[index].componentYes\n                      ? steps[index].componentYes\n                      : \"\"}\n                    {!val && steps[index].componentNo\n                      ? steps[index].componentNo\n                      : \"\"}\n                  </Result>\n                );\n              })}\n              <Card\n                square\n                sx={{\n                  maxWidth: \"100%\",\n                  p: 2,\n                  backgroundColor: \"#A7D930CA\",\n                  my: 1.5,\n                }}\n              > {!contacted && <><Typography\n                  color=\"text.primary\"\n                  align=\"left\"\n                  sx={{ my: 1, pb: 0 }}\n                  gutterBottom\n                  variant=\"h5\"\n                  component=\"div\"\n                >\n                  Kontaktieren Sie uns!\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item>\n                    <TextField\n                      id=\"standard-basic\"\n                      label=\"Name\"\n                      variant=\"filled\"\n                      size='small'\n                      sx={{ backgroundColor: \"white\" }}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      id=\"standard-basic\"\n                      label=\"E-Mail Adresse\"\n                      variant=\"filled\"\n                      size='small'\n                      sx={{ backgroundColor: \"white\" }}\n                    />\n                  </Grid>\n                  <Grid item></Grid>\n                </Grid>\n                <TextField\n                  sx={{ backgroundColor: \"white\", my:2 }}\n                  fullWidth\n                  multiline\n                  variant=\"standard\"\n                />\n                <Button fullWidth variant=\"contained\" onClick={event =>{ setContacted(true)}}>Senden</Button>\n            </>}\n            {contacted && <Typography\n                  color=\"text.primary\"\n                  align=\"left\"\n                  sx={{ my: 1, pb: 0 }}\n                  gutterBottom\n                  variant=\"h5\"\n                  component=\"div\"\n                >\n                 Vielen Dank! Wir melden uns bei Ihnen. \n                </Typography>}\n              </Card>\n              <Button onClick={handleReset} sx={{ mt: 1, mr: 1 }}>\n                Nochmal\n              </Button>\n            </Paper>\n          </>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default Questions;\n","import {  CardMedia, Divider, Grid, Typography } from \"@mui/material\";\nimport Questions from \"../ui /questions/Questions\";\n\nconst steps = [\n  {\n    label: \"Frage 1 | Garten\",\n    showIfNo: true,\n    description: `Hat deine Wohnung einen Garten`,\n    returnYes: \"Super! Dann kÃ¶nnen sie Blumen pflanzen.\",\n    returnNo: \"Schade. Informationen zu StÃ¤dgÃ¤rten in ihrer NÃ¤he gibt es...\",\n    componentYes: (\n      <CardMedia\n        component=\"img\"\n        sx={{width:'300px', marginRight: 'none', marginLeft: 'auto'}}\n        image=\"https://upload.wikimedia.org/wikipedia/commons/e/ec/Blume_mit_Schmetterling_und_Biene_1uf.JPG\"\n        alt=\"green iguana\"\n      />\n    ),\n    componentNo: (\n        <CardMedia\n          component=\"img\"\n          sx={{width:'300px'}}\n          image=\"https://www.floersheim-main.de/media/custom/2983_112_1_g.JPG?1516189242\"\n          alt=\"green iguana\"\n        />\n      ),\n  },\n  {\n    label: \"Frage 2 | Dach\",\n    showIfNo: true,\n    description: \"Lorem Ipsum.\",\n    returnYes: \"Sie haben mit ja geantwortet\",\n    returnNo: \"Sie haben mit nein geantwortet\",\n  },\n  {\n    label: \"Frage 3 | Litheinfall\",\n    showIfNo: true,\n    description: `Lorem Ipsum`,\n    returnYes: \"Sie haben mit ja geantwortet\",\n    returnNo: \"Sie haben mit nein geantwortet\",\n  },\n];\n\nconst Mieter = () => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Typography sx={{mb: 1}} color=\"white\" variant=\"h1\">\n          Fragen\n        </Typography>\n        <Questions steps={steps} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Mieter;\n","import { CardMedia, formLabelClasses, Grid, Typography } from \"@mui/material\";\nimport Questions from \"../ui /questions/Questions\";\n\nconst steps = [\n  {\n    label: \"Frage 1 | Garten\",\n    showIfNo: true,\n    description: `Hat Ihr Haus einen Garten?`,\n    returnYes:\n      \"Da ihr Haus einen Garten hat haben Sie die MÃ¶glichkeit Kletterpflanzen an ihrer Fassade wachsen zu lassen. Diese bindet erhebliche Mengen an Staub und Schadstoffen. \",\n    returnNo:\n      \"Auch wenn ihr Haus keinen Garten hat, kÃ¶nnen Sie trotzdem an der StadtbegrÃ¼nung teilnehmen, z.B. Ã¼ber Stadtgartenprojekte.\",\n    imagePath:\n      \"https://upload.wikimedia.org/wikipedia/commons/e/ec/Blume_mit_Schmetterling_und_Biene_1uf.JPG\",\n  },\n  {\n    label: \"Frage 2 | Garage\",\n    showIfNo: false,\n    description: \"Hat Ihr Haus eine Garage?\",\n    returnYes: \"Garagen bietet hÃ¤ufig eine gute FlÃ¤che zur BegrÃ¼nung. Diese kÃ¶nnen dadurch vor WitterungseinflÃ¼ssen geschÃ¼tzt werden, und Temperaturschwankungen abfedern. \",\n    returnNo: \"\",\n    imagePath:\n      \"https://www.fertiggaragen.net/media/pages/ausstattungen/dachbegruenung/16ddcf3349-1627299100/juwel-fertiggaragen-dachbegruenung.jpg\",\n  },\n  {\n    label: \"Frage 3 | Terasse\",\n    showIfNo: false,\n    description: `Hat Ihr Haus eine Terasse?`,\n    returnYes:\n      \"Auch eine Terasse bietet viele MÃ¶glichkeiten Pflanzen unterzubringen.\",\n    returnNo: \"\",\n    imagePath:\n      \"https://i.pinimg.com/originals/85/ef/df/85efdfd38322a03d73024b9052acef91.jpg\",\n  },\n  {\n    label: \"Frage 4 | BegrÃ¼nung\",\n    showIfNo: true,\n    description: `KÃ¶nnen Sie sich vorstellen Ihr Dach zu begrÃ¼nen?`,\n    returnYes: \"GÃ¤rtnerische Gestaltung und BegrÃ¼nung von InnenhÃ¶fen, StellplÃ¤tzen und VorgÃ¤rten Zuschuss 60% der als fÃ¶rderfÃ¤hig anerkannten Kosten (unrentierliche Kosten), die nicht durch zu erwartende Einnahmen/ErtrÃ¤ge gedeckt werden kÃ¶nnen.\",\n    returnNo: \"Eine BegrÃ¼nung bringt viele positive Aspekte mit sich.\",\n    imagePath:\n      \"https://www.ndr.de/ratgeber/garten/dachbegruenung106_v-contentgross.jpg\",\n  },\n  {\n    label: \"Frage 5 | Photovoltaik\",\n    showIfNo: true,\n    description: `Sind an ihrem Haus Photovoltaikanlagen verbaut?`,\n    returnYes: \"Auch mit Photovoltaik anlagen ist DachbegrÃ¼nung mÃ¶glich. \",\n    returnNo: \"Sie haben mit nein geantwortet\",\n    imagePath:\n      \"https://images.unsplash.com/photo-1613665813446-82a78c468a1d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1158&q=80\",\n  },\n  {\n    label: \"Frage 6 | Projekte\",\n    showIfNo: false,\n    description: `KÃ¶nnen Sie sich vorstellen an Ã¶ffentlichen BegrÃ¼nungsprojekten teilzunehmen?`,\n    returnYes: \"Sie haben mit ja geantwortet\",\n    returnNo: \"\",\n    imagePath:\n      \"https://images.unsplash.com/photo-1618698343216-671a5d82b85a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1072&q=80\",\n  },\n];\n\nconst Owner = () => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Typography sx={{ mb: 1 }} color=\"white\" variant=\"h1\">\n          Fragen\n        </Typography>\n        <Questions steps={steps} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Owner;\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LandingPage from \"./components/ui /landing-page/LandingPage\";\nimport { Slide, Typography } from \"@mui/material\";\nimport Mieter from \"./components/mieter/Mieter\";\nimport Owner from \"./components/owner/Owner\";\nimport Organisation from \"./components/organisation/Organisation\";\n\nfunction App() {\n  const [choice, setChoice] = useState(\"none\");\n  const [showLandingPage, setShowLandingPage] = useState(false);\n\n  let ret = <></>;\n\n  useEffect(() => {\n    switch (choice) {\n      case \"mieter\":\n        ret = <Mieter />;\n        setShowLandingPage(true);\n        break;\n      case \"eigentuemer\":\n        ret = <Mieter />;\n        setShowLandingPage(true);\n        break;\n      case \"organisation\":\n        ret = <Mieter />;\n        setShowLandingPage(true);\n        break;\n      default:\n        setShowLandingPage(false);\n        break;\n    }\n  }, [choice]);\n\n  return (\n    <div className=\"App\" style={{ height: '100vh', overflow: 'auto', backgroundColor: \"#95C22B\" }}>\n      \n      {!showLandingPage && (\n        <LandingPage choice={choice} setChoice={setChoice} />\n      )}\n\n      \n      {showLandingPage && <Owner />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}